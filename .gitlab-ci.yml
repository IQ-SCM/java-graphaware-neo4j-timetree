include:
  - project: graphaware/devops/gitlab-ci-templates
    file: neo4j-framework-template.yml

variables:
  JAR_NAME: timetree
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode -e"

frameworkVersionBump:
  stage: deploy
  image: maven:3.6.0-jdk-8 #needs JDK 8 as the framework won't run on Java 9+
  tags:
    - graphaware
  cache:
    paths:
      - .m2/repository/ #cache local repository
  before_script:
    - mkdir -p ~/.ssh
    - echo "$REPO_SSH" | tr -d '\r' > ~/.ssh/id_rsa #REPO_SSH is defined as gitlab variable
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H `echo $REPO_ADR | sed "s/.*@\(.*\):.*/\1/"` >> ~/.ssh/known_hosts #add SSH key to repo, we need own SSH key with write permissions, repo domain extracted from $REPO_ADR (eg. from git@github.com:graphaware/coolproject.git it extracts github.com
    - git config user.email "gitlab@graphaware.com"
    - git config user.name "gitlab-ci"
    - git checkout -B $CI_COMMIT_REF_NAME #checkout master branch (by default gitlab-ci works in detached state)
    - git remote set-url origin $REPO_ADR
    - echo "$GPG_KEY" | gpg --import --batch #need --batch to avoid following error - gpg: error building skey array: Inappropriate ioctl for device
  script:
    - echo "Updating to version $PARENT_VERSION"
    - mvn versions:update-parent $MAVEN_CLI_OPTS -DparentVersion=["$PARENT_VERSION"] -q #parent version variable is that picky - needs to be in an array and the version needs to be in the quotation marks. Possibly parent version could be omitted if we always updated to the latest version available.
    - mvn versions:commit $MAVEN_CLI_OPTS -q
    - git commit -a -m "[maven-release-plugin] Gitlab-ci parent version bump" #[maven-release-plugin] added not to be hooked by tests and install.
    - OLD_MODULE_VERSION=`mvn $MAVEN_CLI_OPTS --batch-mode -q help:evaluate -Dexpression=project.version -DforceStdout`
    - echo $OLD_MODULE_VERSION
    - OLD_MODULE_VERSION=${OLD_MODULE_VERSION##*.} #get fragment after last .
    - echo $OLD_MODULE_VERSION
    - NEW_MODULE_VERSION="${PARENT_VERSION}.${OLD_MODULE_VERSION}" #this will keep -SNAPSHOT
    - echo $NEW_MODULE_VERSION
    - RELEASE_VERSION="${PARENT_VERSION}.$((${OLD_MODULE_VERSION%-*}-1))" # release is for snapshot version -1, it strips everything after dash (eg -SNAPSHOT)
    - echo $RELEASE_VERSION
    - >
      mvn release:clean release:prepare $MAVEN_CLI_OPTS
      -DreleaseVersion=$RELEASE_VERSION
      -DdevelopmentVersion=$NEW_MODULE_VERSION
      -Dtag="Version-${RELEASE_VERSION}"
      -DskipTests=true
      -Darguments=-DskipTests
    #we must skip tests, as they cause the gitlab runner to hang. It is defined twice to be sure it gets propagated
    - mvn release:perform $MAVEN_CLI_OPTS -DskipTests=true -Darguments=-DskipTests
    - echo $RELEASE_VERSION > .versionVar.tmp
  artifacts: #used for s3 upload
    paths:
      - target
      - .versionVar.tmp
    expire_in: 30 mins #should be fine, don't wanna keep them too long
  only:
    refs:
      - master
    variables:
      - $PARENT_VERSION